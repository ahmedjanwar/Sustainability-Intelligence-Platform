version: "3.9"

services:
  database:
    image: postgres:16-alpine
    container_name: sip_database
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sip}
      POSTGRES_USER: ${POSTGRES_USER:-sip}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sip}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-sip} -d ${POSTGRES_DB:-sip}"]
      interval: 5s
      timeout: 3s
      retries: 20

  backend:
    image: node:20-alpine
    container_name: sip_backend
    working_dir: /app
    env_file:
      - ./.env
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ../Backend:/app:cached
    command: ${BACKEND_CMD:-sh -c "echo 'Define BACKEND_CMD in docker/.env' && sleep infinity"}

  frontend:
    image: node:20-alpine
    container_name: sip_frontend
    working_dir: /app
    env_file:
      - ./.env
    depends_on:
      - backend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ../Frontend:/app:cached
    command: ${FRONTEND_CMD:-sh -c "echo 'Define FRONTEND_CMD in docker/.env' && sleep infinity"}

volumes:
  db_data:
